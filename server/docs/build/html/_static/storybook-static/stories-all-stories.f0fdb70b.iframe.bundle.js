"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[172],{"./src/buttons.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bi:()=>PlayAgainPanel,FA:()=>LetterButton,XR:()=>ButtonPanel,hS:()=>StartForm});var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const BaseLetterButton=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.button(_templateObject||(_templateObject=(0,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__.A)(["\n    font-family: 'IBM Plex Mono', monospace;\n    font-size: 30px;\n    padding: 0em 0.9em 1.3em 0.3em;\n    margin: 0.1em;\n    border-radius: 0.5em;\n    text-align: center;\n    width: 1em;\n    height: 1.2em;\n    background-color: ",";\n    &:hover {\n       ","\n    };\n"])),props=>props.used?"#777":"#ccc",props=>props.used?"":"background-color: #eee;");class LetterButton extends react__WEBPACK_IMPORTED_MODULE_1__.Component{render(){const{letter,wasUsed,makeGuess}=this.props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(BaseLetterButton,{type:"button",used:wasUsed,onClick:wasUsed?null:makeGuess,children:letter})}}const BoxPanel=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div(_templateObject2||(_templateObject2=(0,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__.A)(["\n    display: inline-block;\n    font-size: 30px;\n    background-color: #444;\n    color: #fff;\n    border-radius: 26px;\n    padding: 20px;\n    margin: 10px;\n"])));class ButtonPanel extends react__WEBPACK_IMPORTED_MODULE_1__.Component{makeGuess(letter){return()=>{this.props.onGuess(letter)}}constructor(props){super(props),this.alphabet=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],this.makeGuess=this.makeGuess.bind(this)}render(){const usedLetters=this.props.usedLetters.toUpperCase(),letterButtons=this.alphabet.map(letter=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(LetterButton,{letter,wasUsed:usedLetters.includes(letter),makeGuess:this.makeGuess(letter)},letter));return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(BoxPanel,{children:letterButtons})}}const FormInput=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.input(_templateObject3||(_templateObject3=(0,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__.A)(["\n    padding:  3px;\n    margin:   6px;\n    text-align: center;\n    font-family: inherit;\n"]))),FormSelect=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.select(_templateObject4||(_templateObject4=(0,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__.A)(["\n    padding:  3px;\n    margin:   6px;\n    text-align: center;\n    font-family: inherit;\n"]))),ActionButton=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.button(_templateObject5||(_templateObject5=(0,C_Users_Daniel_Deng_Documents_Daniel_WebDevelopment_Hangman_client_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral_js__WEBPACK_IMPORTED_MODULE_0__.A)(["\n    padding: 5px;\n    margin: 3px;\n    background-color: #ccc;\n    font-size: 110%;\n    font-family: inherit;\n"])));class StartForm extends react__WEBPACK_IMPORTED_MODULE_1__.Component{constructor(props){super(props),this.state={nameValue:"",langValue:"en"},this.onNameChange=this.onNameChange.bind(this),this.onLangChange=this.onLangChange.bind(this),this.clickWrapper=this.clickWrapper.bind(this)}onNameChange(event){this.setState({nameValue:event.target.value})}onLangChange(event){this.setState({langValue:event.target.value})}clickWrapper(event){const{nameValue,langValue}=this.state;this.props.clickStart(nameValue,langValue)}render(){const{clickWrapper,onNameChange,onLangChange}=this,{nameValue,langValue}=this.state;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("form",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("label",{htmlFor:"nameInput",children:"Enter your name"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(FormInput,{value:nameValue,type:"text",name:"name",onChange:onNameChange}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("label",{htmlFor:"languageInput",children:"Choose a Language"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(FormSelect,{onChange:onLangChange,value:langValue,id:"languageInput",name:"language",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"en",children:"English"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"fr",children:"French"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"es",children:"Spanish"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("br",{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ActionButton,{type:"button",onClick:clickWrapper,children:"Start a Game"})]})})}}class PlayAgainPanel extends react__WEBPACK_IMPORTED_MODULE_1__.Component{constructor(props){super(props),this.state={langValue:props.lang},this.onLangChange=this.onLangChange.bind(this),this.clickWrapper=this.clickWrapper.bind(this)}onLangChange(event){this.setState({langValue:event.target.value})}clickWrapper(event){const{langValue}=this.state;this.props.clickPlayAgain(langValue)}render(){const{clickWrapper,onLangChange}=this,{langValue}=this.state,{clickQuit}=this.props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("form",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("label",{htmlFor:"languageInput",children:"Choose a Language"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(FormSelect,{onChange:onLangChange,value:langValue,id:"languageInput",name:"language",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"en",children:"English"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"fr",children:"French"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("option",{value:"es",children:"Spanish"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ActionButton,{type:"button",onClick:clickWrapper,children:"Play Again"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(ActionButton,{type:"button",onClick:clickQuit,children:"Quit"})]})})}}LetterButton.__docgenInfo={description:"",methods:[],displayName:"LetterButton"},ButtonPanel.__docgenInfo={description:"",methods:[{name:"makeGuess",docblock:null,modifiers:[],params:[{name:"letter",optional:!1,type:null}],returns:null}],displayName:"ButtonPanel"},StartForm.__docgenInfo={description:"",methods:[{name:"onNameChange",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"onLangChange",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"clickWrapper",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null}],displayName:"StartForm"},PlayAgainPanel.__docgenInfo={description:"",methods:[{name:"onLangChange",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"clickWrapper",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null}],displayName:"PlayAgainPanel"}},"./src/stories/all.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BannerStory:()=>BannerStory,ButtonPanelStory:()=>ButtonPanelStory,GallowsStory:()=>GallowsStory,LetterButtonAlreadyUsed:()=>LetterButtonAlreadyUsed,LetterButtonNotYetUsed:()=>LetterButtonNotYetUsed,LoseScreenStory:()=>LoseScreenStory,PlayAgainPanelStory:()=>PlayAgainPanelStory,PlayScreenStory:()=>PlayScreenStory,ResultBannerStory:()=>ResultBannerStory,SignInScreenStory:()=>SignInScreenStory,StartFormStory:()=>StartFormStory,StartFormTest:()=>StartFormTest,UsageAndBlanksStory:()=>UsageAndBlanksStory,WinScreenStory:()=>WinScreenStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>all_stories});var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,react=__webpack_require__("./node_modules/react/index.js"),buttons=__webpack_require__("./src/buttons.js"),taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const TitleFontDiv=styled_components_browser_esm.Ay.div(_templateObject||(_templateObject=(0,taggedTemplateLiteral.A)(["\n    font-family: 'Allura', cursive;\n    font-size: 6em;\n    :first-letter {\n        font-size: 150%;\n        margin-right: -0.1em;\n    };\n    padding-left: 0.2em;\n    text-align: left;\n"]))),SubTitleDiv=styled_components_browser_esm.Ay.div(_templateObject2||(_templateObject2=(0,taggedTemplateLiteral.A)(["\n    font-size: 2em;\n    text-align: right;\n    font-family: 'Allura', cursive;\n    margin-top: -2em;\n    padding-right: 3em;\n"])));class Banner extends react.Component{render(){const{full}=this.props;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(TitleFontDiv,{children:"Lang-man"}),full&&(0,jsx_runtime.jsx)(SubTitleDiv,{children:"play multilingual hangman"})]})}}const BlockFontDiv=styled_components_browser_esm.Ay.div(_templateObject3||(_templateObject3=(0,taggedTemplateLiteral.A)(["\n    background-color: ",";\n    font-family: 'Passion One', sans-serif;\n    font-size: 4em;\n"])),props=>props.winResult?"#ccc":"transparent");class ResultBanner extends react.Component{render(){const{winResult}=this.props;return(0,jsx_runtime.jsx)(BlockFontDiv,{children:winResult?"You Won!":"You Lost"})}}const InUsageSpan=styled_components_browser_esm.Ay.span(_templateObject4||(_templateObject4=(0,taggedTemplateLiteral.A)(["\n    text-decoration: ",";\n    padding-left: 0.3em;\n    padding-right: 0.3em;\n    display: inline-block;\n"])),props=>props.showBlanks?"none":"underline");const BlanksDiv=styled_components_browser_esm.Ay.div(_templateObject5||(_templateObject5=(0,taggedTemplateLiteral.A)(["\n    letter-spacing: 0.3em;\n    font-size: 1.5em;\n    text-align: center;\n"])));class UsageAndBlanks extends react.Component{render(){const{usage,blanks,showBlanks}=this.props,newUsage=function prepareUsage(usage,blanks,showBlanks){const[beforeBlanks,afterBlanks]=usage.split(/_+/),newBlanks=showBlanks?blanks.replace(/./g,"_"):blanks;return(0,jsx_runtime.jsxs)("p",{children:[beforeBlanks,(0,jsx_runtime.jsx)(InUsageSpan,{showBlanks,children:newBlanks}),afterBlanks]})}(usage,blanks,showBlanks),newBlanks=(0,jsx_runtime.jsx)(BlanksDiv,{children:blanks});return(0,jsx_runtime.jsxs)("div",{children:[newUsage,showBlanks&&newBlanks]})}}var gallows_templateObject;Banner.__docgenInfo={description:"",methods:[],displayName:"Banner"},ResultBanner.__docgenInfo={description:"",methods:[],displayName:"ResultBanner"},UsageAndBlanks.__docgenInfo={description:"",methods:[],displayName:"UsageAndBlanks"};const GallowsCanvas=styled_components_browser_esm.Ay.canvas(gallows_templateObject||(gallows_templateObject=(0,taggedTemplateLiteral.A)(["\n    padding: 10px;\n"])));class Gallows extends react.Component{constructor(props){super(props),this.gallowsRef=react.createRef()}componentDidMount(){this.drawGallows()}componentDidUpdate(){this.drawGallows()}drawGallows(){const{badGuesses=0}=this.props,canvas=this.gallowsRef.current;if(!canvas)return;const ctx=canvas.getContext("2d");ctx.clearRect(0,0,canvas.width,canvas.height),ctx.fillRect(0,290,200,10),ctx.fillRect(20,0,10,300),ctx.fillRect(20,0,100,10),ctx.fillRect(120,0,10,40),badGuesses>=1&&(ctx.lineWidth=4,ctx.beginPath(),ctx.arc(125,75,30,0,2*Math.PI),ctx.stroke()),badGuesses>=2&&ctx.fillRect(120,110,10,80),ctx.lineWidth=6.7,badGuesses>=3&&(ctx.beginPath(),ctx.moveTo(120,126),ctx.quadraticCurveTo(90,160,60,125),ctx.stroke()),badGuesses>=4&&(ctx.beginPath(),ctx.moveTo(130,126),ctx.quadraticCurveTo(160,160,190,135),ctx.stroke()),badGuesses>=5&&(ctx.beginPath(),ctx.moveTo(120,190),ctx.quadraticCurveTo(80,220,70,270),ctx.stroke()),badGuesses>=6&&(ctx.beginPath(),ctx.moveTo(130,190),ctx.quadraticCurveTo(130,220,183,260),ctx.stroke())}render(){return(0,jsx_runtime.jsx)(GallowsCanvas,{ref:this.gallowsRef,width:200,height:300})}}var screens_templateObject,screens_templateObject2,screens_templateObject3,screens_templateObject4,screens_templateObject5,_templateObject6,_templateObject7,_templateObject8;Gallows.__docgenInfo={description:"",methods:[{name:"drawGallows",docblock:null,modifiers:[],params:[],returns:null}],displayName:"Gallows"};const FortySixtyGrid=styled_components_browser_esm.Ay.div(screens_templateObject||(screens_templateObject=(0,taggedTemplateLiteral.A)(["\n    display: grid;\n    grid-template-columns: 40% 60%;\n    width: 600px;\n    background-color: #ddd;\n    font-family: 'Josefin Slab', serif;\n"]))),FullWidthDiv=styled_components_browser_esm.Ay.div(screens_templateObject2||(screens_templateObject2=(0,taggedTemplateLiteral.A)(["\n    grid-column: 1 / 3;\n    ","\n"])),props=>props.spacer&&"padding-bottom: 20px;"),PositionDiv=styled_components_browser_esm.Ay.div(screens_templateObject3||(screens_templateObject3=(0,taggedTemplateLiteral.A)(["\n    grid-column: ",";\n    grid-row: ",";\n"])),props=>props.column,props=>props.row),PositionDivCentered=(0,styled_components_browser_esm.Ay)(PositionDiv)(screens_templateObject4||(screens_templateObject4=(0,taggedTemplateLiteral.A)(["\n    text-align: center;\n"])));class SignInScreen extends react.Component{render(){const{clickStart}=this.props;return(0,jsx_runtime.jsxs)(FortySixtyGrid,{children:[(0,jsx_runtime.jsx)(FullWidthDiv,{spacer:!0,children:(0,jsx_runtime.jsx)(Banner,{full:!0})}),(0,jsx_runtime.jsx)(PositionDivCentered,{row:2,column:1,children:(0,jsx_runtime.jsx)(Gallows,{badGuesses:3})}),(0,jsx_runtime.jsx)(PositionDiv,{row:2,column:2,children:(0,jsx_runtime.jsx)(buttons.hS,{clickStart})})]})}}const zoomBounceKeyframes=(0,styled_components_browser_esm.i7)(screens_templateObject5||(screens_templateObject5=(0,taggedTemplateLiteral.A)(["\n    0%   { transform: scale(0.1);  }\n    50%  { transform: scale(0.95); }\n    60%  { transform: scale(0.9);  }\n    70%  { transform: scale(0.95); }\n    80%  { transform: scale(0.9);  }\n    90%  { transform: scale(0.95); }\n    100% { transform: scale(0.9);  }\n"]))),WinResultsDiv=(0,styled_components_browser_esm.Ay)(FullWidthDiv)(_templateObject6||(_templateObject6=(0,taggedTemplateLiteral.A)(["\n    font-size: 180%;\n    animation-name: ",";\n    animation-duration: 1.0s;\n    animation-timing-function: ease-in;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n    animation-direction: normal;\n"])),zoomBounceKeyframes);class WinScreen extends react.Component{render(){const{lang,clickPlayAgain,clickQuit}=this.props;return(0,jsx_runtime.jsxs)(FortySixtyGrid,{children:[(0,jsx_runtime.jsx)(FullWidthDiv,{children:(0,jsx_runtime.jsx)(Banner,{full:!1})}),(0,jsx_runtime.jsx)(WinResultsDiv,{style:{textAlign:"center"},children:(0,jsx_runtime.jsx)(ResultBanner,{winResult:!0})}),(0,jsx_runtime.jsx)(PositionDivCentered,{row:3,column:"1 / 3",children:(0,jsx_runtime.jsx)(buttons.Bi,{lang,clickPlayAgain,clickQuit})})]})}}const dropSwingKeyframes=(0,styled_components_browser_esm.i7)(_templateObject7||(_templateObject7=(0,taggedTemplateLiteral.A)(["\n    0%  { transform: translateY(-300px); }\n    5%  { transform: translateY(-290px); }\n    10% { transform: translateY(-250px); }\n    15% { transform: translateY(-160px); }\n    20% { transform: translateY(   0px); }\n    30% { transform: rotate(-16deg); transform-origin: 50% -100%; }\n    50% { transform: rotate( 12deg); transform-origin: 50% -100%; }\n    70% { transform: rotate( -8deg); transform-origin: 50% -100%; }\n    90% { transform: rotate(  4deg); transform-origin: 50% -100%; }\n   100% { transform: rotate(  0deg); transform-origin: 50% -100%; }\n"]))),LoseResultDiv=styled_components_browser_esm.Ay.div(_templateObject8||(_templateObject8=(0,taggedTemplateLiteral.A)(["\n    text-align: center;\n    animation-name: ",";\n    animation-delay: 0.2s;\n    animation-duration: 2.0s;\n    animation-timing-function: linear;\n    animation-iteration-count: 1;\n    animation-fill-mode: forwards;\n    animation-direction: normal;\n    grid-column: 2;\n    grid-row: 2;\n"])),dropSwingKeyframes);class LoseScreen extends react.Component{render(){const{usage,blanks}=this.props,{lang,clickPlayAgain,clickQuit}=this.props;return(0,jsx_runtime.jsxs)(FortySixtyGrid,{style:{backgroundColor:"#ccc"},children:[(0,jsx_runtime.jsx)(FullWidthDiv,{children:(0,jsx_runtime.jsx)(Banner,{full:!1})}),(0,jsx_runtime.jsx)(PositionDiv,{row:"2 / 4",column:1,style:{textAlign:"right",margin:"auto"},children:(0,jsx_runtime.jsx)(Gallows,{badGuesses:6})}),(0,jsx_runtime.jsx)(LoseResultDiv,{children:(0,jsx_runtime.jsx)(ResultBanner,{winResult:!1})}),(0,jsx_runtime.jsx)(PositionDiv,{row:3,column:2,children:(0,jsx_runtime.jsx)(UsageAndBlanks,{usage,blanks,showBlanks:!1})}),(0,jsx_runtime.jsx)(PositionDivCentered,{row:4,column:"1 / 3",children:(0,jsx_runtime.jsx)(buttons.Bi,{lang,clickPlayAgain,clickQuit})})]})}}class PlayScreen extends react.Component{render(){const{usage,blanks,usedLetters,numBadGuesses,onGuess}=this.props;return(0,jsx_runtime.jsxs)(FortySixtyGrid,{children:[(0,jsx_runtime.jsx)(FullWidthDiv,{children:(0,jsx_runtime.jsx)(Banner,{full:!1})}),(0,jsx_runtime.jsx)(PositionDiv,{row:"2 / 4",column:1,style:{textAlign:"right",margin:"auto"},children:(0,jsx_runtime.jsx)(Gallows,{badGuesses:numBadGuesses})}),(0,jsx_runtime.jsx)(PositionDiv,{row:2,column:2,children:(0,jsx_runtime.jsx)(UsageAndBlanks,{usage,blanks,showBlanks:!0})}),(0,jsx_runtime.jsx)(PositionDivCentered,{row:3,column:2,children:(0,jsx_runtime.jsx)(buttons.XR,{usedLetters,onGuess})})]})}}SignInScreen.__docgenInfo={description:"",methods:[],displayName:"SignInScreen"},WinScreen.__docgenInfo={description:"",methods:[],displayName:"WinScreen"},LoseScreen.__docgenInfo={description:"",methods:[],displayName:"LoseScreen"},PlayScreen.__docgenInfo={description:"",methods:[],displayName:"PlayScreen"};const all_stories={title:"Button-related Components"},LetterButtonAlreadyUsed={name:"LetterButton - Already Used",render:()=>{return(0,jsx_runtime.jsx)(buttons.FA,{letter:"A",wasUsed:!0,makeGuess:(name="click-A",function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];console.log("".concat(name," clicked"),...args)})});var name}},LetterButtonNotYetUsed={name:"LetterButton - Not Yet Used",render:()=>(0,jsx_runtime.jsx)(buttons.FA,{letter:"B",wasUsed:!1,makeGuess:e=>console.log("click-B",e)})},ButtonPanelStory={name:"ButtonPanel Examples",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"ButtonPanel(language, onGuess)"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsx)("b",{children:"onGuess"})," - a callback that takes the guessed letter"]}),(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsx)("b",{children:"usedLetters"})," - string of already-guessed letters"]})]}),(0,jsx_runtime.jsx)("h3",{children:"Used Letters: rlstine"}),(0,jsx_runtime.jsx)(buttons.XR,{onGuess:letter=>console.log("guessed",letter),usedLetters:"rlstine"}),(0,jsx_runtime.jsx)("h3",{children:"Used Letters: senorita"}),(0,jsx_runtime.jsx)(buttons.XR,{onGuess:letter=>console.log("guessed",letter),usedLetters:"senorita"}),(0,jsx_runtime.jsx)("h3",{children:"Used Letters: mondieu"}),(0,jsx_runtime.jsx)(buttons.XR,{onGuess:letter=>console.log("guessed",letter),usedLetters:"mondieu"})]})},StartFormStory=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"StartForm(clickStart)"}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"clickStart - game starting callback, takes name and language"})}),(0,jsx_runtime.jsx)(buttons.hS,{clickStart:(name,language)=>console.log("start-game",{name,language})})]}),StartFormTest={render:()=>(0,jsx_runtime.jsxs)("form",{children:[(0,jsx_runtime.jsx)("input",{type:"text",placeholder:"Name"}),(0,jsx_runtime.jsxs)("select",{children:[(0,jsx_runtime.jsx)("option",{value:"en",children:"English"}),(0,jsx_runtime.jsx)("option",{value:"fr",children:"French"})]}),(0,jsx_runtime.jsx)("button",{children:"Start Game"})]})},PlayAgainPanelStory={name:"PlayAgainPanel Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"PlayAgainPanel(lang, clickPlayAgain)"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"lang - the language in which the last game was played"}),(0,jsx_runtime.jsx)("li",{children:"clickPlayAgain - callback taking the new language choice"}),(0,jsx_runtime.jsx)("li",{children:"clickQuit - callback to quit playing"})]}),(0,jsx_runtime.jsx)("h3",{children:"Default English"}),(0,jsx_runtime.jsx)(buttons.Bi,{lang:"en",clickPlayAgain:()=>console.log("play again"),clickQuit:()=>console.log("quit game")}),(0,jsx_runtime.jsx)("h3",{children:"Default French"}),(0,jsx_runtime.jsx)(buttons.Bi,{lang:"fr",clickPlayAgain:()=>console.log("play again"),clickQuit:()=>console.log("quit game")})]})},BannerStory={name:"Banner Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"Banner(full)"}),(0,jsx_runtime.jsx)("p",{children:"This component includes both Banner and ShortTitle from the design docs."}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"full - truthy means wide title is shown with subtitle, otherwise shows just short title"})}),(0,jsx_runtime.jsx)("h3",{children:"Full Title"}),(0,jsx_runtime.jsx)(Banner,{full:!0}),(0,jsx_runtime.jsx)("h3",{children:"Short Title"}),(0,jsx_runtime.jsx)(Banner,{full:!1})]})},ResultBannerStory={name:"ResultBanner Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"Result Banner"}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"winResult - truthy means the player won, otherwise the player lost"})}),(0,jsx_runtime.jsx)("h3",{children:"Player Won the Game"}),(0,jsx_runtime.jsx)(ResultBanner,{winResult:!0}),(0,jsx_runtime.jsx)("h3",{children:"Player Lost the Game"}),(0,jsx_runtime.jsx)(ResultBanner,{winResult:!1})]})},UsageAndBlanksStory={name:"UsageAndBlanks Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"UsageAndBlanks(usage, blanks, showBlanks)"}),(0,jsx_runtime.jsx)("p",{children:"This component uses the non-React function prepareUsage."}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"usage - usage example with guess word as underscores"}),(0,jsx_runtime.jsx)("li",{children:'blanks - guessed/non-guessed letters, like "h_ml_t"'}),(0,jsx_runtime.jsx)("li",{children:"showBlanks - whether to show blanks separately or in usage"})]}),(0,jsx_runtime.jsx)("h3",{children:"With blanks"}),(0,jsx_runtime.jsx)(UsageAndBlanks,{usage:"The sky loomed dark and ______.",blanks:"__oo_y",showBlanks:!0}),(0,jsx_runtime.jsx)("h3",{children:"Without blanks"}),(0,jsx_runtime.jsx)(UsageAndBlanks,{usage:"The sky loomed dark and .",blanks:"gloomy",showBlanks:!0})]})},GallowsStory={name:"Gallows Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"Gallows(badGuesses)"}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"badGuesses - number (0 to 6) of parts to draw"})}),(0,jsx_runtime.jsx)("h3",{children:"0 Wrong Guesses"}),(0,jsx_runtime.jsx)(Gallows,{badGuesses:0}),(0,jsx_runtime.jsx)("h3",{children:"3 Wrong Guesses"}),(0,jsx_runtime.jsx)(Gallows,{badGuesses:3}),(0,jsx_runtime.jsx)("h3",{children:"6 Wrong Guesses"}),(0,jsx_runtime.jsx)(Gallows,{badGuesses:6})]})},SignInScreenStory={name:"SignInScreen Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"SignInScreen(clickStart)"}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"clickStart - game-starting callback; gets name, language"})}),(0,jsx_runtime.jsx)(SignInScreen,{clickStart:(name,lang)=>console.log("start-game",{name,lang})})]})},WinScreenStory={name:"WinScreen Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"WinScreen(lang, clickPlayAgain, clickQuit)"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"lang - the language in which the last game was played"}),(0,jsx_runtime.jsx)("li",{children:"clickPlayAgain - callback taking the new language choice"}),(0,jsx_runtime.jsx)("li",{children:"clickQuit - callback to quit playing"})]}),(0,jsx_runtime.jsx)("h3",{children:"Expecting English"}),(0,jsx_runtime.jsx)(WinScreen,{lang:"en",clickPlayAgain:lang=>console.log("play again",lang),clickQuit:()=>console.log("quit game")}),(0,jsx_runtime.jsx)("h3",{children:"Expecting Spanish"}),(0,jsx_runtime.jsx)(WinScreen,{lang:"es",clickPlayAgain:lang=>console.log("play again",lang),clickQuit:()=>console.log("quit game")})]})},LoseScreenStory={name:"LoseScreen Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"LoseScreen(usage, blanks, lang, clickPlayAgain, clickQuit)"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"usage - the usage example from the game just ending"}),(0,jsx_runtime.jsx)("li",{children:"blanks - the word to be guessed for the game just ending"}),(0,jsx_runtime.jsx)("li",{children:"lang - the language in which the last game was played"}),(0,jsx_runtime.jsx)("li",{children:"clickPlayAgain - callback taking the new language choice"}),(0,jsx_runtime.jsx)("li",{children:"clickQuit - callback to quit playing"})]}),(0,jsx_runtime.jsx)("h3",{children:"English Example"}),(0,jsx_runtime.jsx)(LoseScreen,{usage:"Therefore, send not to know for whom the bell _____, it tolls for thee.",blanks:"tolls",lang:"en",clickPlayAgain:lang=>console.log("play again",lang),clickQuit:()=>console.log("quit game")}),(0,jsx_runtime.jsx)("h3",{children:"Spanish Example"}),(0,jsx_runtime.jsx)(LoseScreen,{usage:"Los _________ nunca abandonan y los que abandonan nunca ganan.",blanks:"ganadores",lang:"es",clickPlayAgain:lang=>console.log("play again",lang),clickQuit:()=>console.log("quit game")})]})},PlayScreenStory={name:"PlayScreen Example",render:()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"PlayScreen(usage, blanks, usedLetters, numBadGuesses, onGuess)"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"usage - the usage example provided as a clue"}),(0,jsx_runtime.jsx)("li",{children:"blanks - blanks and right guesses for the secret word"}),(0,jsx_runtime.jsx)("li",{children:"usedLetters - a string of letters that have been guessed"}),(0,jsx_runtime.jsx)("li",{children:"numBadGuesses - number of wrong guesses"}),(0,jsx_runtime.jsx)("li",{children:"onGuess - callback to use when guessing a letter"})]}),(0,jsx_runtime.jsx)("h3",{children:"Typical Game"}),(0,jsx_runtime.jsx)(PlayScreen,{usage:"All happy families are alike; each unhappy ______ is unhappy in its own way.",blanks:"_a____",usedLetters:"acr",numBadGuesses:2,onGuess:letter=>console.log("guess",letter)})]})},__namedExportsOrder=["LetterButtonAlreadyUsed","LetterButtonNotYetUsed","ButtonPanelStory","StartFormStory","StartFormTest","PlayAgainPanelStory","BannerStory","ResultBannerStory","UsageAndBlanksStory","GallowsStory","SignInScreenStory","WinScreenStory","LoseScreenStory","PlayScreenStory"];LetterButtonAlreadyUsed.parameters={...LetterButtonAlreadyUsed.parameters,docs:{...LetterButtonAlreadyUsed.parameters?.docs,source:{originalSource:"{\n  name: 'LetterButton - Already Used',\n  render: () => <LetterButton letter=\"A\" wasUsed={true} makeGuess={logClick('click-A')} />\n}",...LetterButtonAlreadyUsed.parameters?.docs?.source}}},LetterButtonNotYetUsed.parameters={...LetterButtonNotYetUsed.parameters,docs:{...LetterButtonNotYetUsed.parameters?.docs,source:{originalSource:"{\n  name: 'LetterButton - Not Yet Used',\n  render: () => <LetterButton letter=\"B\" wasUsed={false} makeGuess={e => console.log('click-B', e)} />\n}",...LetterButtonNotYetUsed.parameters?.docs?.source}}},ButtonPanelStory.parameters={...ButtonPanelStory.parameters,docs:{...ButtonPanelStory.parameters?.docs,source:{originalSource:"{\n  name: 'ButtonPanel Examples',\n  render: () => <div>\r\n      <h2>ButtonPanel(language, onGuess)</h2>\r\n      <ul>\r\n        <li><b>onGuess</b> - a callback that takes the guessed letter</li>\r\n        <li><b>usedLetters</b> - string of already-guessed letters</li>\r\n      </ul>\r\n\r\n      <h3>Used Letters: rlstine</h3>\r\n      <ButtonPanel onGuess={letter => console.log('guessed', letter)} usedLetters=\"rlstine\" />\r\n\r\n      <h3>Used Letters: senorita</h3>\r\n      <ButtonPanel onGuess={letter => console.log('guessed', letter)} usedLetters=\"senorita\" />\r\n\r\n      <h3>Used Letters: mondieu</h3>\r\n      <ButtonPanel onGuess={letter => console.log('guessed', letter)} usedLetters=\"mondieu\" />\r\n    </div>\n}",...ButtonPanelStory.parameters?.docs?.source}}},StartFormStory.parameters={...StartFormStory.parameters,docs:{...StartFormStory.parameters?.docs,source:{originalSource:"() => <div>\r\n    <h2>StartForm(clickStart)</h2>\r\n    <ul>\r\n      <li>clickStart - game starting callback, takes name and language</li>\r\n    </ul>\r\n    <StartForm clickStart={(name, language) => console.log('start-game', {\n    name,\n    language\n  })} />\r\n  </div>",...StartFormStory.parameters?.docs?.source}}},StartFormTest.parameters={...StartFormTest.parameters,docs:{...StartFormTest.parameters?.docs,source:{originalSource:'{\n  render: () => <form>\r\n      <input type="text" placeholder="Name" />\r\n      <select>\r\n        <option value="en">English</option>\r\n        <option value="fr">French</option>\r\n      </select>\r\n      <button>Start Game</button>\r\n    </form>\n}',...StartFormTest.parameters?.docs?.source}}},PlayAgainPanelStory.parameters={...PlayAgainPanelStory.parameters,docs:{...PlayAgainPanelStory.parameters?.docs,source:{originalSource:"{\n  name: 'PlayAgainPanel Example',\n  render: () => <div>\r\n      <h2>PlayAgainPanel(lang, clickPlayAgain)</h2>\r\n      <ul>\r\n        <li>lang - the language in which the last game was played</li>\r\n        <li>clickPlayAgain - callback taking the new language choice</li>\r\n        <li>clickQuit - callback to quit playing</li>\r\n      </ul>\r\n\r\n      <h3>Default English</h3>\r\n      <PlayAgainPanel lang=\"en\" clickPlayAgain={() => console.log('play again')} clickQuit={() => console.log('quit game')} />\r\n\r\n      <h3>Default French</h3>\r\n      <PlayAgainPanel lang=\"fr\" clickPlayAgain={() => console.log('play again')} clickQuit={() => console.log('quit game')} />\r\n    </div>\n}",...PlayAgainPanelStory.parameters?.docs?.source}}},BannerStory.parameters={...BannerStory.parameters,docs:{...BannerStory.parameters?.docs,source:{originalSource:"{\n  name: 'Banner Example',\n  render: () => <div>\r\n      <h2>Banner(full)</h2>\r\n      <p>\r\n        This component includes both Banner and ShortTitle from the design docs.\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          full - truthy means wide title is shown with subtitle, otherwise shows just short title\r\n        </li>\r\n      </ul>\r\n      <h3>Full Title</h3>\r\n      <Banner full={true} />\r\n      <h3>Short Title</h3>\r\n      <Banner full={false} />\r\n    </div>\n}",...BannerStory.parameters?.docs?.source}}},ResultBannerStory.parameters={...ResultBannerStory.parameters,docs:{...ResultBannerStory.parameters?.docs,source:{originalSource:"{\n  name: 'ResultBanner Example',\n  render: () => <div>\r\n      <h2>Result Banner</h2>\r\n      <ul>\r\n        <li>winResult - truthy means the player won, otherwise the player lost</li>\r\n      </ul>\r\n\r\n      <h3>Player Won the Game</h3>\r\n      <ResultBanner winResult={true} />\r\n\r\n      <h3>Player Lost the Game</h3>\r\n      <ResultBanner winResult={false} />\r\n    </div>\n}",...ResultBannerStory.parameters?.docs?.source}}},UsageAndBlanksStory.parameters={...UsageAndBlanksStory.parameters,docs:{...UsageAndBlanksStory.parameters?.docs,source:{originalSource:'{\n  name: \'UsageAndBlanks Example\',\n  render: () => <div>\r\n      <h2>UsageAndBlanks(usage, blanks, showBlanks)</h2>\r\n      <p>This component uses the non-React function prepareUsage.</p>\r\n      <ul>\r\n        <li>usage - usage example with guess word as underscores</li>\r\n        <li>blanks - guessed/non-guessed letters, like "h_ml_t"</li>\r\n        <li>showBlanks - whether to show blanks separately or in usage</li>\r\n      </ul>          \r\n\r\n      <h3>With blanks</h3>\r\n      <UsageAndBlanks usage="The sky loomed dark and ______." blanks="__oo_y" showBlanks={true} />\r\n\r\n      <h3>Without blanks</h3>\r\n      <UsageAndBlanks usage="The sky loomed dark and ." blanks="gloomy" showBlanks={true} />\r\n    </div>\n}',...UsageAndBlanksStory.parameters?.docs?.source}}},GallowsStory.parameters={...GallowsStory.parameters,docs:{...GallowsStory.parameters?.docs,source:{originalSource:"{\n  name: 'Gallows Example',\n  render: () => <div>\r\n      <h2>Gallows(badGuesses)</h2>\r\n      <ul>\r\n        <li>badGuesses - number (0 to 6) of parts to draw</li>\r\n      </ul>\r\n      <h3>0 Wrong Guesses</h3>\r\n      <Gallows badGuesses={0} />\r\n      <h3>3 Wrong Guesses</h3>\r\n      <Gallows badGuesses={3} />\r\n      <h3>6 Wrong Guesses</h3>\r\n      <Gallows badGuesses={6} />\r\n    </div>\n}",...GallowsStory.parameters?.docs?.source}}},SignInScreenStory.parameters={...SignInScreenStory.parameters,docs:{...SignInScreenStory.parameters?.docs,source:{originalSource:"{\n  name: 'SignInScreen Example',\n  render: () => <div>\r\n      <h2>SignInScreen(clickStart)</h2>\r\n      <ul>\r\n        <li>clickStart - game-starting callback; gets name, language</li>\r\n      </ul>\r\n      <SignInScreen clickStart={(name, lang) => console.log('start-game', {\n      name,\n      lang\n    })} />\r\n    </div>\n}",...SignInScreenStory.parameters?.docs?.source}}},WinScreenStory.parameters={...WinScreenStory.parameters,docs:{...WinScreenStory.parameters?.docs,source:{originalSource:"{\n  name: 'WinScreen Example',\n  render: () => <div>\r\n      <h2>WinScreen(lang, clickPlayAgain, clickQuit)</h2>\r\n      <ul>\r\n        <li>lang - the language in which the last game was played</li>\r\n        <li>clickPlayAgain - callback taking the new language choice</li>\r\n        <li>clickQuit - callback to quit playing</li>\r\n      </ul>\r\n      <h3>Expecting English</h3>\r\n      <WinScreen lang=\"en\" clickPlayAgain={lang => console.log('play again', lang)} clickQuit={() => console.log('quit game')} />\r\n      <h3>Expecting Spanish</h3>\r\n      <WinScreen lang=\"es\" clickPlayAgain={lang => console.log('play again', lang)} clickQuit={() => console.log('quit game')} />\r\n    </div>\n}",...WinScreenStory.parameters?.docs?.source}}},LoseScreenStory.parameters={...LoseScreenStory.parameters,docs:{...LoseScreenStory.parameters?.docs,source:{originalSource:'{\n  name: \'LoseScreen Example\',\n  render: () => <div>\r\n      <h2>LoseScreen(usage, blanks, lang, clickPlayAgain, clickQuit)</h2>\r\n      <ul>\r\n        <li>usage - the usage example from the game just ending</li>\r\n        <li>blanks - the word to be guessed for the game just ending</li>\r\n        <li>lang - the language in which the last game was played</li>\r\n        <li>clickPlayAgain - callback taking the new language choice</li>\r\n        <li>clickQuit - callback to quit playing</li>\r\n      </ul>\r\n\r\n      <h3>English Example</h3>\r\n      <LoseScreen usage="Therefore, send not to know for whom the bell _____, it tolls for thee." blanks="tolls" lang="en" clickPlayAgain={lang => console.log(\'play again\', lang)} clickQuit={() => console.log(\'quit game\')} />\r\n\r\n      <h3>Spanish Example</h3>\r\n      <LoseScreen usage="Los _________ nunca abandonan y los que abandonan nunca ganan." blanks="ganadores" lang="es" clickPlayAgain={lang => console.log(\'play again\', lang)} clickQuit={() => console.log(\'quit game\')} />\r\n    </div>\n}',...LoseScreenStory.parameters?.docs?.source}}},PlayScreenStory.parameters={...PlayScreenStory.parameters,docs:{...PlayScreenStory.parameters?.docs,source:{originalSource:'{\n  name: \'PlayScreen Example\',\n  render: () => <div>\r\n      <h2>PlayScreen(usage, blanks, usedLetters, numBadGuesses, onGuess)</h2>\r\n      <ul>\r\n        <li>usage - the usage example provided as a clue</li>\r\n        <li>blanks - blanks and right guesses for the secret word</li>\r\n        <li>usedLetters - a string of letters that have been guessed</li>\r\n        <li>numBadGuesses - number of wrong guesses</li>\r\n        <li>onGuess - callback to use when guessing a letter</li>\r\n      </ul>\r\n\r\n      <h3>Typical Game</h3>\r\n      <PlayScreen usage="All happy families are alike; each unhappy ______ is unhappy in its own way." blanks="_a____" usedLetters="acr" numBadGuesses={2} onGuess={letter => console.log(\'guess\', letter)} />\r\n    </div>\n}',...PlayScreenStory.parameters?.docs?.source}}}}}]);